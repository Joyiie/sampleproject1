// <auto-generated />
using System;
using Capstonep2.Infrastructure.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Capstonep2.Migrations
{
    [DbContext(typeof(DefaultDBContext))]
    partial class DefaultDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("PatientID")
                        .HasColumnType("char(36)");

                    b.Property<int>("PurposeOfVisit")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Symptom")
                        .HasColumnType("longtext");

                    b.Property<int>("Visit")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PatientID");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            ID = new Guid("3ce371f9-dc79-4623-b84f-0b2fe7c99962"),
                            EndTime = new DateTime(2023, 2, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            PurposeOfVisit = 1,
                            StartTime = new DateTime(2023, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            Symptom = "Light Sensitivity",
                            Visit = 1
                        },
                        new
                        {
                            ID = new Guid("7297d64f-7912-4e46-a663-e543af0102fb"),
                            EndTime = new DateTime(22, 2, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            PurposeOfVisit = 1,
                            StartTime = new DateTime(2023, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Symptom = "Light Sensitivity",
                            Visit = 1
                        },
                        new
                        {
                            ID = new Guid("a0d287bc-73e8-41b6-88f1-e7385ea7da7d"),
                            EndTime = new DateTime(2023, 2, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            PurposeOfVisit = 1,
                            StartTime = new DateTime(2023, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Symptom = "Light Sensitivity",
                            Visit = 1
                        },
                        new
                        {
                            ID = new Guid("e822435f-5110-465f-a276-c89ee9a5dc54"),
                            EndTime = new DateTime(2023, 2, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            PurposeOfVisit = 1,
                            StartTime = new DateTime(2023, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            Symptom = "Light Sensitivity",
                            Visit = 1
                        },
                        new
                        {
                            ID = new Guid("c7d431a6-579b-4841-8629-2bbcb79a5e15"),
                            EndTime = new DateTime(2023, 2, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            PurposeOfVisit = 2,
                            StartTime = new DateTime(2023, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Symptom = "Light Sensitivity",
                            Visit = 0
                        },
                        new
                        {
                            ID = new Guid("20f20659-d4e3-466e-b2df-e6a6b1f62fab"),
                            EndTime = new DateTime(2022, 2, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            PurposeOfVisit = 0,
                            StartTime = new DateTime(2022, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            Symptom = "Red Eyes",
                            Visit = 0
                        },
                        new
                        {
                            ID = new Guid("861c579e-bb80-4dea-b8f2-4b189cb6a362"),
                            EndTime = new DateTime(2022, 2, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            PurposeOfVisit = 0,
                            StartTime = new DateTime(2022, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Symptom = "Headache",
                            Visit = 1
                        },
                        new
                        {
                            ID = new Guid("2222ed0f-aaea-45f3-8a72-f0ee3ed23a22"),
                            EndTime = new DateTime(2022, 2, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            PurposeOfVisit = 0,
                            StartTime = new DateTime(2022, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            Symptom = "Swelling",
                            Visit = 0
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ConsultationRecord", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PatientID")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("AppointmentID");

                    b.HasIndex("PatientID");

                    b.ToTable("ConsultationRecords");

                    b.HasData(
                        new
                        {
                            ID = new Guid("a11b823f-8eff-4d89-abdc-8efa8f28291c"),
                            AppointmentID = new Guid("3ce371f9-dc79-4623-b84f-0b2fe7c99962"),
                            PatientID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b")
                        },
                        new
                        {
                            ID = new Guid("73ec06ac-56aa-453a-a29d-447691d51cd9"),
                            AppointmentID = new Guid("20f20659-d4e3-466e-b2df-e6a6b1f62fab"),
                            PatientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a")
                        },
                        new
                        {
                            ID = new Guid("0c096359-c9ef-4f37-9c37-47b7bf247746"),
                            AppointmentID = new Guid("c7d431a6-579b-4841-8629-2bbcb79a5e15"),
                            PatientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a")
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Finding", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ConsultationRecordID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ConsultationRecordID");

                    b.ToTable("Findings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7694cbc7-2ce9-4312-bd3e-1a262a1b9f1b"),
                            ConsultationRecordID = new Guid("a11b823f-8eff-4d89-abdc-8efa8f28291c"),
                            Description = "test2",
                            Tags = "test2"
                        },
                        new
                        {
                            ID = new Guid("3f36d818-7ccd-4219-8144-d7261542750a"),
                            ConsultationRecordID = new Guid("73ec06ac-56aa-453a-a29d-447691d51cd9"),
                            Description = "findings test 1",
                            Tags = "testtable123"
                        },
                        new
                        {
                            ID = new Guid("4d86df61-f006-4e19-a9aa-56e684495d74"),
                            ConsultationRecordID = new Guid("0c096359-c9ef-4f37-9c37-47b7bf247746"),
                            Description = "sore eyes",
                            Tags = "123"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Patient", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            ID = new Guid("2b792220-f333-49ec-abe2-3a6fc4edb0c2"),
                            Address = "Luakan,Dinalupihan, Bataan",
                            BirthDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Luisa Katrina",
                            Gender = 0,
                            LastName = "Reyes",
                            MiddleName = "Pangilinan"
                        },
                        new
                        {
                            ID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            Address = "Luakan,Dinalupihan, Bataan",
                            BirthDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Clarissa Joy",
                            Gender = 0,
                            LastName = "Flores",
                            MiddleName = "Gozon"
                        },
                        new
                        {
                            ID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            Address = "Bacong,Hermosa, Bataan",
                            BirthDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Raniel",
                            Gender = 1,
                            LastName = "David",
                            MiddleName = "Mallari"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Prescription", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ConsultationRecordID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ConsultationRecordID");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            ID = new Guid("b4dae5e3-754c-4b26-b7e6-32cad6660e25"),
                            ConsultationRecordID = new Guid("a11b823f-8eff-4d89-abdc-8efa8f28291c"),
                            Description = " test 2",
                            Tags = "test2"
                        },
                        new
                        {
                            ID = new Guid("f4cd6025-9f83-4843-b84e-f4f706ac0700"),
                            ConsultationRecordID = new Guid("73ec06ac-56aa-453a-a29d-447691d51cd9"),
                            Description = "prescriptions test 2",
                            Tags = "tabletest123"
                        },
                        new
                        {
                            ID = new Guid("577d4bde-7c59-4f5e-ac1c-2a0d9465b917"),
                            ConsultationRecordID = new Guid("0c096359-c9ef-4f37-9c37-47b7bf247746"),
                            Description = "biogesic",
                            Tags = "123"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Role", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            Abbreviation = "Pt",
                            Description = "One who receives medical treatment",
                            Name = "patient"
                        },
                        new
                        {
                            ID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            Abbreviation = "Adm",
                            Description = "One who manages the system",
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.User", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PatientID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("PatientID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "luisa@yahoo.com",
                            FirstName = "Luisa Katrina",
                            Gender = 0,
                            LastName = "Pangilinan",
                            MiddleName = "Reyes",
                            PatientID = new Guid("2b792220-f333-49ec-abe2-3a6fc4edb0c2"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joy@yahoo.com",
                            FirstName = "Clarissa Joy",
                            Gender = 1,
                            LastName = "Gozon",
                            MiddleName = "Flores",
                            PatientID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "renieldavid@yahoo.com",
                            FirstName = "Reniel",
                            Gender = 1,
                            LastName = "Mallari",
                            MiddleName = "David",
                            PatientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Address = "Dinalupihan, Orani , Bataan",
                            BirthDate = new DateTime(2002, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@yahoo.com",
                            FirstName = "admin",
                            Gender = 0,
                            LastName = "admin",
                            MiddleName = "admin",
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101")
                        },
                        new
                        {
                            ID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Address = "Dinalupihan, Orani , Bataan",
                            BirthDate = new DateTime(2002, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Janedavid@yahoo.com",
                            FirstName = "Jane",
                            Gender = 0,
                            LastName = "David",
                            MiddleName = "Adan",
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101")
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.UserLogin", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Key")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("UserLogins");

                    b.HasData(
                        new
                        {
                            ID = new Guid("3d3fe692-9334-4c2f-8fc3-6e8152d27e8a"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Value = "$2a$11$iWfyg6LZgU1eCtI08pkaSemyFQVixiJPVMMdUEUgFOebLoe1GhYtm"
                        },
                        new
                        {
                            ID = new Guid("aef39b55-c52c-4ece-963f-b6ef5d18d78e"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("df8eac24-0fc5-44a3-bd0a-9d7ea5d74778"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("e12ed029-a0a2-4b14-beb4-4edb8a34e90b"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Value = "$2a$11$gmyHfpfariIKfKjNsNtIKehcUWyan15Z3XZ54K2VHFVJNPbVf7pIq"
                        },
                        new
                        {
                            ID = new Guid("60e938be-a71b-4f43-bfab-832fc623ca80"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("6945f4d6-5345-4bc0-a12b-3db86af2d20a"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("fb1f052f-73b1-41e9-ba18-36b2313f8061"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Value = "$2a$11$9GvbJVrey6RmkHcdldBQn.9RapbHEKE37Yuwow8bD8uDs2qjXay4O"
                        },
                        new
                        {
                            ID = new Guid("0fc40e56-755b-4d4d-8591-83f2bb050d75"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("58fe0cb1-9272-45d6-b433-d5cc7f024d76"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("2aa6c8b3-1392-4a54-98cc-b1b382f351d8"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "$2a$11$2deiUj3FmHdXU1vY79lD1OMuHUmt2aC4f.ijaF/fKmmionCatHoAe"
                        },
                        new
                        {
                            ID = new Guid("6e047351-75f3-444c-9760-c865a40d123e"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("b3974ed8-b0f6-4305-abef-123bb5745425"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("c0d01976-0681-450e-8c67-654c2c498658"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "$2a$11$b3tfH9v40U8iAahh39cH1uBf7xjivL4YEPHYzHQQJre5TfF4vVVCm"
                        },
                        new
                        {
                            ID = new Guid("de83bde6-67ab-4cc2-b775-3c7a572d1047"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("532e48c9-8e7c-48a1-8e75-508af3793c98"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "0"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.UserRole", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4efce31a-0eac-40cf-9375-df2d69a21a67"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836")
                        },
                        new
                        {
                            Id = new Guid("fedc5105-2090-41a0-b594-c022a99e99c3"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95")
                        },
                        new
                        {
                            Id = new Guid("f8f338ac-b8d8-4759-8092-df84cd131abb"),
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e")
                        },
                        new
                        {
                            Id = new Guid("7e12f852-7533-4a2b-8e7b-b12ee7fcafd3"),
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4")
                        },
                        new
                        {
                            Id = new Guid("fda8cb4e-d6a4-4e6f-b68d-0376f1495596"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398")
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ConsultationRecord", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentID");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("Appointment");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Finding", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.ConsultationRecord", "Consultation")
                        .WithMany()
                        .HasForeignKey("ConsultationRecordID");

                    b.Navigation("Consultation");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Prescription", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.ConsultationRecord", "Consultation")
                        .WithMany()
                        .HasForeignKey("ConsultationRecordID");

                    b.Navigation("Consultation");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.User", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Patient");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.UserRole", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
